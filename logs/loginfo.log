2025-03-14 16:13:10,448 , INFO ,Spark Application Started... 
2025-03-14 16:13:15,792 , INFO ,Closing down clientserver connection 
2025-03-14 16:28:07,062 , INFO ,Spark Application Started... 
2025-03-14 16:28:11,828 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-14 16:28:12,039 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-14 16:28:12,219 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-14 16:28:12,631 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-14 16:28:12,954 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-14 16:28:13,110 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-14 16:28:16,915 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-14 16:28:16,915 , INFO ,All Dataframe created Successfully... 
2025-03-14 16:28:16,915 , INFO ,Closing down clientserver connection 
2025-03-15 10:24:14,609 , INFO ,Spark Application Started... 
2025-03-15 10:24:19,926 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 10:24:20,132 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 10:24:20,334 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 10:24:20,749 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 10:24:21,073 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 10:24:21,278 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 10:24:25,151 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 10:24:25,152 , INFO ,All Dataframe created Successfully... 
2025-03-15 10:24:25,380 , INFO ,Closing down clientserver connection 
2025-03-15 14:33:45,528 , INFO ,Spark Application Started... 
2025-03-15 14:33:50,711 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 14:33:50,949 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 14:33:51,155 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 14:33:51,572 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 14:33:51,897 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 14:33:52,068 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 14:33:55,959 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 14:33:55,960 , INFO ,All Dataframe created Successfully... 
2025-03-15 14:33:56,639 , INFO ,Closing down clientserver connection 
2025-03-15 14:36:49,611 , INFO ,Spark Application Started... 
2025-03-15 14:36:54,445 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 14:36:54,670 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 14:36:54,872 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 14:36:55,400 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 14:36:55,725 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 14:36:55,894 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 14:36:59,820 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 14:36:59,820 , INFO ,All Dataframe created Successfully... 
2025-03-15 14:37:00,420 , INFO ,Closing down clientserver connection 
2025-03-15 15:11:25,585 , INFO ,Spark Application Started... 
2025-03-15 15:11:30,355 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 15:11:30,577 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 15:11:30,776 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 15:11:31,238 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 15:11:31,580 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 15:11:31,745 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 15:11:35,395 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 15:11:35,395 , INFO ,All Dataframe created Successfully... 
2025-03-15 15:11:38,429 , INFO ,Closing down clientserver connection 
2025-03-15 15:13:52,065 , INFO ,Spark Application Started... 
2025-03-15 15:13:56,951 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 15:13:57,164 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 15:13:57,358 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 15:13:57,810 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 15:13:58,129 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 15:13:58,313 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 15:14:02,026 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 15:14:02,027 , INFO ,All Dataframe created Successfully... 
2025-03-15 15:14:05,335 , INFO ,Closing down clientserver connection 
2025-03-15 15:18:49,199 , INFO ,Spark Application Started... 
2025-03-15 15:18:54,033 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 15:18:54,244 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 15:18:54,435 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 15:18:54,874 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 15:18:55,198 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 15:18:55,361 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 15:18:59,061 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 15:18:59,062 , INFO ,All Dataframe created Successfully... 
2025-03-15 15:19:05,529 , INFO ,Most Sold product list Updated... 
2025-03-15 15:19:05,529 , INFO ,Closing down clientserver connection 
2025-03-15 15:22:36,568 , INFO ,Spark Application Started... 
2025-03-15 15:22:41,233 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 15:22:41,450 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 15:22:41,648 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 15:22:42,101 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 15:22:42,433 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 15:22:42,598 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 15:22:46,544 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 15:22:46,544 , INFO ,All Dataframe created Successfully... 
2025-03-15 15:22:52,321 , INFO ,Most Sold product list Updated... 
2025-03-15 15:22:52,321 , INFO ,Closing down clientserver connection 
2025-03-15 15:27:10,266 , INFO ,Spark Application Started... 
2025-03-15 15:27:14,867 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 15:27:15,077 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 15:27:15,262 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 15:27:15,669 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 15:27:16,005 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 15:27:16,166 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 15:27:19,955 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 15:27:19,956 , INFO ,All Dataframe created Successfully... 
2025-03-15 15:27:25,943 , INFO ,Most Sold product list Updated... 
2025-03-15 15:27:25,944 , INFO ,Closing down clientserver connection 
2025-03-15 16:47:53,462 , INFO ,Spark Application Started... 
2025-03-15 16:47:58,324 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 16:47:58,577 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 16:47:58,815 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 16:47:59,310 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 16:47:59,642 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 16:47:59,812 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 16:48:03,495 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 16:48:03,495 , INFO ,All Dataframe created Successfully... 
2025-03-15 16:48:11,424 , INFO ,Most Sold product list Updated... 
2025-03-15 16:48:11,425 , INFO ,Closing down clientserver connection 
2025-03-15 16:50:23,560 , INFO ,Spark Application Started... 
2025-03-15 16:50:29,414 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-15 16:50:29,639 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-15 16:50:29,846 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-15 16:50:30,317 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-15 16:50:30,682 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-15 16:50:30,863 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-15 16:50:34,505 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-15 16:50:34,505 , INFO ,All Dataframe created Successfully... 
2025-03-15 16:50:42,586 , INFO ,Most Sold product list Updated... 
2025-03-15 16:50:42,586 , INFO ,Closing down clientserver connection 
2025-03-17 14:50:33,275 , INFO ,Spark Application Started... 
2025-03-17 14:50:38,764 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 14:50:39,025 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 14:50:39,268 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 14:50:39,676 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 14:50:40,001 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 14:50:40,164 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 14:50:44,224 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 14:50:44,224 , INFO ,All Dataframe created Successfully... 
2025-03-17 14:50:47,839 , INFO ,Products most Persons purchased list Updated... 
2025-03-17 14:50:55,068 , INFO ,Products That More quantity list Updated... 
2025-03-17 14:50:55,068 , INFO ,Closing down clientserver connection 
2025-03-17 15:06:56,287 , INFO ,Spark Application Started... 
2025-03-17 15:07:01,181 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:07:01,397 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:07:01,612 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:07:02,096 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:07:02,438 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:07:02,597 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:07:05,992 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:07:05,992 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:07:06,209 , INFO ,Closing down clientserver connection 
2025-03-17 15:09:37,527 , INFO ,Spark Application Started... 
2025-03-17 15:09:39,447 , INFO ,Error while receiving. 
Traceback (most recent call last):
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
RuntimeError: reentrant call inside <_io.BufferedReader name=3>
2025-03-17 15:09:39,448 , INFO ,Closing down clientserver connection 
2025-03-17 15:09:39,448 , ERROR ,Exception while sending command. 
Traceback (most recent call last):
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
RuntimeError: reentrant call inside <_io.BufferedReader name=3>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-17 15:09:39,449 , INFO ,Error while receiving. 
Traceback (most recent call last):
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
  File "/usr/lib/python3.10/socket.py", line 705, in readinto
    return self._sock.recv_into(b)
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc
2025-03-17 15:09:39,454 , INFO ,Closing down clientserver connection 
2025-03-17 15:09:39,454 , ERROR ,Exception while sending command. 
Traceback (most recent call last):
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 511, in send_command
    answer = smart_decode(self.stream.readline()[:-1])
  File "/usr/lib/python3.10/socket.py", line 705, in readinto
    return self._sock.recv_into(b)
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/pyspark/context.py", line 381, in signal_handler
    self.cancelAllJobs()
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/pyspark/context.py", line 2446, in cancelAllJobs
    self._jsc.sc().cancelAllJobs()
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 334, in get_return_value
    raise Py4JError(
py4j.protocol.Py4JError: An error occurred while calling o13.sc

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1038, in send_command
    response = connection.send_command(command)
  File "/home/pranav/spark/spark-3.5.5-bin-hadoop3/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 539, in send_command
    raise Py4JNetworkError(
py4j.protocol.Py4JNetworkError: Error while sending or receiving
2025-03-17 15:09:39,454 , INFO ,Closing down clientserver connection 
2025-03-17 15:09:39,454 , INFO ,local variable 'table_name' referenced before assignment 
2025-03-17 15:09:39,454 , INFO ,Closing down clientserver connection 
2025-03-17 15:10:15,795 , INFO ,Spark Application Started... 
2025-03-17 15:10:20,406 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:10:20,614 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:10:20,793 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:10:21,209 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:10:21,564 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:10:21,734 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:10:25,254 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:10:25,254 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:10:25,565 , INFO ,Closing down clientserver connection 
2025-03-17 15:15:31,465 , INFO ,Spark Application Started... 
2025-03-17 15:15:36,210 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:15:36,432 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:15:36,632 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:15:37,063 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:15:37,404 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:15:37,597 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:15:41,206 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:15:41,207 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:15:45,484 , INFO ,Closing down clientserver connection 
2025-03-17 15:24:11,814 , INFO ,Spark Application Started... 
2025-03-17 15:24:18,019 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:24:18,331 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:24:18,560 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:24:19,017 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:24:19,370 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:24:19,556 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:24:23,657 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:24:23,657 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:24:27,092 , INFO ,Closing down clientserver connection 
2025-03-17 15:25:15,809 , INFO ,Spark Application Started... 
2025-03-17 15:25:20,827 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:25:21,044 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:25:21,244 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:25:21,726 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:25:22,021 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:25:22,211 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:25:25,841 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:25:25,841 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:25:29,866 , INFO ,Closing down clientserver connection 
2025-03-17 15:27:14,816 , INFO ,Spark Application Started... 
2025-03-17 15:27:20,109 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:27:20,351 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:27:20,555 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:27:21,196 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:27:21,598 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:27:21,829 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:27:25,628 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:27:25,628 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:27:29,168 , INFO ,Closing down clientserver connection 
2025-03-17 15:32:28,886 , INFO ,Spark Application Started... 
2025-03-17 15:32:28,887 , INFO ,Closing down clientserver connection 
2025-03-17 15:33:09,490 , INFO ,Spark Application Started... 
2025-03-17 15:33:14,511 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:33:14,732 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:33:14,911 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:33:15,298 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:33:15,592 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:33:15,747 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:33:19,235 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:33:19,235 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:33:22,766 , INFO ,Closing down clientserver connection 
2025-03-17 15:34:25,975 , INFO ,Spark Application Started... 
2025-03-17 15:34:31,140 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:34:31,380 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:34:31,607 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:34:32,044 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:34:32,368 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:34:32,525 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:34:36,303 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:34:36,303 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:34:42,794 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:34:42,796 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:34:42,806 , INFO ,Closing down clientserver connection 
2025-03-17 15:35:30,486 , INFO ,Spark Application Started... 
2025-03-17 15:35:35,559 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:35:35,787 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:35:35,982 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:35:36,387 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:35:36,691 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:35:36,851 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:35:40,371 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:35:40,371 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:35:46,862 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:35:46,864 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:37:42,488 , INFO ,Closing down clientserver connection 
2025-03-17 15:37:50,984 , INFO ,Spark Application Started... 
2025-03-17 15:37:56,023 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:37:56,268 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:37:56,489 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:37:56,924 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:37:57,259 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:37:57,427 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:38:01,157 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:38:01,157 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:38:07,341 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:38:07,342 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:38:39,199 , INFO ,Closing down clientserver connection 
2025-03-17 15:38:51,943 , INFO ,Spark Application Started... 
2025-03-17 15:38:58,131 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:38:58,397 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:38:58,631 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:38:59,162 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:38:59,531 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:38:59,741 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:39:04,074 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:39:04,074 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:39:11,550 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:39:11,552 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:39:34,939 , INFO ,Closing down clientserver connection 
2025-03-17 15:39:45,364 , INFO ,Spark Application Started... 
2025-03-17 15:39:51,160 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:39:51,413 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:39:51,624 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:39:52,229 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:39:52,593 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:39:52,800 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:39:56,887 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:39:56,888 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:40:04,392 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:40:04,394 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:41:27,664 , INFO ,Closing down clientserver connection 
2025-03-17 15:44:45,370 , INFO ,Spark Application Started... 
2025-03-17 15:44:50,495 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:44:50,720 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:44:50,932 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:44:51,406 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:44:51,722 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:44:51,891 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:44:55,609 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:44:55,609 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:45:01,889 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:45:01,890 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:45:02,047 , INFO ,Closing down clientserver connection 
2025-03-17 15:45:56,832 , INFO ,Spark Application Started... 
2025-03-17 15:46:01,967 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:46:02,205 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:46:02,414 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:46:02,824 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:46:03,167 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:46:03,335 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:46:07,113 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:46:07,113 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:46:13,368 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:46:13,369 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:46:13,526 , INFO ,Closing down clientserver connection 
2025-03-17 15:47:31,647 , INFO ,Spark Application Started... 
2025-03-17 15:47:36,559 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:47:36,781 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:47:36,973 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:47:37,359 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:47:37,689 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:47:37,856 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:47:41,494 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:47:41,494 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:47:47,760 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:47:47,762 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:47:47,920 , INFO ,Closing down clientserver connection 
2025-03-17 15:48:32,661 , INFO ,Spark Application Started... 
2025-03-17 15:48:37,739 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:48:37,945 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:48:38,115 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:48:38,524 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:48:38,822 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:48:38,978 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:48:42,692 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:48:42,692 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:48:49,410 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:48:49,411 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:48:49,567 , INFO ,Closing down clientserver connection 
2025-03-17 15:55:16,349 , INFO ,Spark Application Started... 
2025-03-17 15:55:22,286 , INFO ,DataFrame[CategoryID: int, CategoryName: string] created Successfully... 
2025-03-17 15:55:22,574 , INFO ,DataFrame[CityID: int, CityName: string, Zipcode: int, CountryID: int] created Successfully... 
2025-03-17 15:55:22,842 , INFO ,DataFrame[CountryID: int, CountryName: string, CountryCode: string] created Successfully... 
2025-03-17 15:55:23,483 , INFO ,DataFrame[CustomerID: int, FirstName: string, MiddleInitial: string, LastName: string, CityID: int, Address: string] created Successfully... 
2025-03-17 15:55:23,867 , INFO ,DataFrame[EmployeeID: int, FirstName: string, MiddleInitial: string, LastName: string, BirthDate: timestamp, Gender: string, CityID: int, HireDate: timestamp] created Successfully... 
2025-03-17 15:55:24,071 , INFO ,DataFrame[ProductID: int, ProductName: string, Price: double, CategoryID: int, Class: string, ModifyDate: timestamp, Resistant: string, IsAllergic: string, VitalityDays: double] created Successfully... 
2025-03-17 15:55:28,120 , INFO ,DataFrame[SalesID: int, SalesPersonID: int, CustomerID: int, ProductID: int, Quantity: int, Discount: double, TotalPrice: double, SalesDate: timestamp, TransactionNumber: string] created Successfully... 
2025-03-17 15:55:28,120 , INFO ,All Dataframe created Successfully... 
2025-03-17 15:55:31,508 , INFO ,Products most Persons purchased list Updated... 
2025-03-17 15:55:38,534 , INFO ,Products That More quantity list Updated... 
2025-03-17 15:55:43,844 , INFO ,No.of sales in each Hour list updated..... 
2025-03-17 15:55:46,691 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:55:46,692 , INFO ,Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting. 
2025-03-17 15:55:46,840 , INFO ,Visualization result stored in folder, Visualize_result 
2025-03-17 15:55:46,849 , INFO ,Closing down clientserver connection 
